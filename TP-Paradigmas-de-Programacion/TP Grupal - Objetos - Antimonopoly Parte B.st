Object subclass: #Jugadores	instanceVariableNames: 'jugadores'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Jugadores methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/20/2012 21:22'!agregarJugador: unJugador	jugadores add: unJugador.! !!Jugadores methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 22:23'!initialize	jugadores := Set new.! !!Jugadores methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/20/2012 21:23'!quitarJugador: unJugador	jugadores remove: unJugador.! !!Jugadores methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 21:03'!ranking	^(jugadores asSortedCollection: [:unJugador :otroJugador | unJugador patrimonio > otroJugador patrimonio]).! !Object subclass: #Estilo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!Estilo subclass: #Agresivo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Agresivo methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:43'!construyeSiPuede: unJugador en: unaInmobiliaria[unJugador puedeConstruirEn: unaInmobiliaria] whileTrue: [unaInmobiliaria construye: unJugador].! !!Agresivo methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:36'!puede: unJugador comprar: unaInversion	^ true.   ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Agresivo class	instanceVariableNames: 'unaInversion'!Estilo subclass: #Normal	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Normal methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:50'!construyeSiPuede: unJugador en:unaInmobiliaria(unJugador puedeConstruirEn: unaInmobiliaria)	ifTrue:[unaInmobiliaria construye: unJugador].(unJugador puedeConstruirEn: unaInmobiliaria)	ifTrue:[unaInmobiliaria construye: unJugador].! !!Normal methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:51'!puede: unJugador comprar: unaInversion   	^((unJugador  patrimonio * 0.5 > unaInversion valor) & (unJugador cantidadDeInversiones < 1)).! !Object subclass: #Tablero	instanceVariableNames: 'casilleros'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Tablero methodsFor: 'as yet unclassified' stamp: 'esteban 5/15/2012 22:17'!agregarCasillero: unCasillero	casilleros add: unCasillero.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 21:03'!cantidadDeCasilleros	^(casilleros size).! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 21:03'!dameCasillero: unNro	^(casilleros at: unNro).! !!Tablero methodsFor: 'as yet unclassified' stamp: 'esteban 5/15/2012 22:17'!initialize 	casilleros := OrderedCollection new.! !Estilo subclass: #Precavido	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Precavido methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:06'!construyeSiPuede: unJugador en:unaInmobiliaria(unJugador puedeConstruirEn: unaInmobiliaria)	ifTrue:[unaInmobiliaria construye: unJugador]! !!Precavido methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:35'!puede: unJugador comprar: unaInversion   	^((unJugador  patrimonio * 0.2 > unaInversion valor) & (unJugador cantidadDeInversiones < 2)).! !Object subclass: #Casillero	instanceVariableNames: 'jugador'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Casillero methodsFor: 'as yet unclassified' stamp: 'esteban 5/30/2012 10:49'!jugador	^jugador.! !!Casillero methodsFor: 'as yet unclassified' stamp: 'esteban 5/30/2012 10:49'!jugador: unJugador	jugador := unJugador.! !Casillero subclass: #Descanso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Descanso methodsFor: 'as yet unclassified' stamp: 'tano2810 5/19/2012 11:39'!accion: unJugador! !Casillero subclass: #Inversion	instanceVariableNames: 'valor dueño estado porcentaje'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Inversion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:19'!accion: unJugadorself estaDisponible	ifTrue: [unJugador comprarSiQuiere: self  ]	ifFalse: [self caeJugador: unJugador].! !!Inversion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:48'!caeJugador: unJugadorself esPropiedadDe: unJugador	ifTrue: [self caeJugadorDueño: unJugador]	ifFalse: [self pagaRenta: unJugador]! !!Inversion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:56'!caeJugadorDueño: unJugador! !!Inversion methodsFor: 'as yet unclassified' stamp: 'esteban 5/15/2012 22:30'!dueño	^dueño.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 21:54'!dueño: unDueño	dueño := unDueño.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:48'!esPropiedadDe: unJugador	^self dueño = unJugador .! !!Inversion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:45'!estaDisponible 	^self dueño = self estado.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/23/2012 00:45'!estado	^estado.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/23/2012 00:45'!estado: unEstado	estado:= unEstado.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:50'!pagaRenta: unJugadorunJugador pagarleA: (self dueño) unaCantidad: (self renta: unJugador).   ! !!Inversion methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 22:41'!porcentaje	^porcentaje.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 22:41'!porcentaje: unPorcentaje	^porcentaje := unPorcentaje.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:51'!renta: unJugador	^(self valor * self porcentaje / 100).! !!Inversion methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 21:41'!valor	^valor.! !!Inversion methodsFor: 'as yet unclassified' stamp: 'esteban 5/15/2012 22:28'!valor: unValor	valor := unValor.! !Inversion subclass: #Comunicacion	instanceVariableNames: 'caidasPorJugador'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Comunicacion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:37'!caidasDe: unJugador	^caidasPorJugador at: unJugador ifAbsent: 0.! !!Comunicacion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:37'!contarCaida: unJugador	(unJugador = self dueño) | (unJugador = self estado) ifFalse:[caidasPorJugador at: unJugador put: (self caidasDe: unJugador + 1)].! !!Comunicacion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:24'!initialize 	caidasPorJugador := Dictionary new.! !!Comunicacion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:54'!pagaRenta: unJugador	self contarCaida: unJugador.	super pagaRenta: unJugador.  ! !!Comunicacion methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:56'!renta: unJugador	^(super renta: unJugador) * (self caidasDe: unJugador).! !Casillero subclass: #AFIP	instanceVariableNames: 'impuesto'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!AFIP methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:46'!accion: unJugador 	(unJugador patrimonio > impuesto valorASuperar)	ifTrue: [unJugador pagarleA: (unJugador estado) unaCantidad: (unJugador patrimonio * (impuesto porcentaje) / 100)]. ! !!AFIP methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:46'!impuesto	^impuesto.! !!AFIP methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:46'!impuesto: unImpuesto	impuesto := unImpuesto.! !AFIP subclass: #Impuesto	instanceVariableNames: 'porcentaje valorASuperar'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Impuesto methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:46'!porcentaje	^porcentaje.! !!Impuesto methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:46'!porcentaje: unPorcentaje	porcentaje := unPorcentaje.! !!Impuesto methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:46'!valorASuperar 	^valorASuperar.! !!Impuesto methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:46'!valorASuperar: unValor	valorASuperar := unValor.! !Inversion subclass: #Inmobiliaria	instanceVariableNames: 'cantidadDepartamentos cantidadEdificios'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:57'!caeJugadorDueño: unJugador	unJugador caeEnInmobiliaria: self.  ! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:18'!construirDepartamento: unJugador	unJugador descontarDinero: self valorDepartamento.	self cantidadDepartamentos: self cantidadDepartamentos + 1.     ! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:18'!construirEdificio: unJugador	unJugador descontarDinero: self valorEdificio.	self cantidadEdificios: self cantidadEdificios + 1.    ! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:13'!construye:unJugador(self puedeConstruirDepartamento) ifTrue: [self construirDepartamento: unJugador]									ifFalse: [self construirEdificio: unJugador]! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'esteb 6/10/2012 14:17'!initialize 	self cantidadDepartamentos: 0.	self cantidadEdificios: 0. ! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:29'!precioSiguienteConstruccion 	^ (self cantidadDepartamentos < 4) ifTrue:[self valorDepartamento ] ifFalse: [self valorEdificio].! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:09'!puedeConstruir^(self puedeConstruirDepartamento)or:[self puedeConstruirEdificio].! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:15'!puedeConstruirDepartamento 	^ self cantidadDepartamentos < 4.! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:16'!puedeConstruirEdificio 	^ self cantidadEdificios = 0.! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 16:59'!renta: unJugador^(super renta + self rentaEdificio * self cantidadEdificios + self rentaDepartamento * self cantidadDepartamentos)  ! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:53'!rentaDepartamento	^(super valor * 10 / 100).! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:54'!rentaEdificio	^(super valor * 40 / 100).! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:54'!valor	^(super valor + self valorDepartamento * self cantidadDepartamentos + self valorEdificio * self cantidadEdificios).! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:55'!valorDepartamento	^(super valor / 2).! !!Inmobiliaria methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:55'!valorEdificio	^(super valor).! !!Inmobiliaria methodsFor: 'accessing' stamp: 'Anonymous 6/14/2012 19:51'!cantidadDepartamentos	^cantidadDepartamentos.! !!Inmobiliaria methodsFor: 'accessing' stamp: 'Anonymous 6/14/2012 19:51'!cantidadDepartamentos: anObject	cantidadDepartamentos := anObject.! !!Inmobiliaria methodsFor: 'accessing' stamp: 'Anonymous 6/14/2012 19:51'!cantidadEdificios	^cantidadEdificios.! !!Inmobiliaria methodsFor: 'accessing' stamp: 'Anonymous 6/14/2012 19:52'!cantidadEdificios: anObject	cantidadEdificios := anObject.! !Casillero subclass: #Subsidio	instanceVariableNames: 'valor'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Subsidio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:55'!accion: unJugador	(unJugador estado) pagarleA: (unJugador) unaCantidad: (self valor).    ! !!Subsidio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 21:46'!valor	^valor.! !!Subsidio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 21:46'!valor: unValor	valor := unValor.! !Casillero subclass: #Antimonopolio	instanceVariableNames: 'valor'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Antimonopolio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:47'!accion: unJugador	(unJugador estado) expropiarInversiones: (unJugador inversionesQueSuperan: ((unJugador estado) valorLeyAntimonopolio)) a: (unJugador).! !Object subclass: #ActorEconomico	instanceVariableNames: 'inversiones dinero'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'esteban 6/7/2012 21:26'!agregarInversion: unaInversion	inversiones add: unaInversion.  	! !!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'esteban 6/7/2012 21:26'!cantidadDeInversiones 	^(inversiones size).! !!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:14'!descontarDinero: cantidad	self dinero: (self dinero - cantidad).! !!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'esteban 6/7/2012 21:25'!dinero	^dinero.! !!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'esteban 6/7/2012 21:25'!dinero: cantidadDeDinero	dinero := cantidadDeDinero.! !!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:14'!pagarleA: alguien unaCantidad: cantidad	self descontarDinero: cantidad.	alguien recibirDinero: cantidad.    ! !!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:14'!quitarInversion: unaInversion	inversiones remove: unaInversion. ! !!ActorEconomico methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:14'!recibirDinero: cantidad	self dinero: (self dinero + cantidad).! !ActorEconomico subclass: #Estado	instanceVariableNames: 'valorLeyAntimonopolio'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Estado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:15'!expropiarInversion: unaInversion a: unJugador	unJugador quitarInversion: unaInversion.	self agregarInversion: unaInversion.    	self pagarleA: (unJugador) unaCantidad: (unaInversion valor / 2).  	unaInversion dueño: self.! !!Estado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:17'!expropiarInversiones: unasInversiones a: unJugador	unasInversiones do: [:unaInversion | self expropiarInversion: (unaInversion) a: (unJugador)].! !!Estado methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 20:15'!initialize 	inversiones := Set new.	self dinero: 500000.! !!Estado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:17'!valorLeyAntimonopolio	^valorLeyAntimonopolio. ! !!Estado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:17'!valorLeyAntimonopolio: unValor	valorLeyAntimonopolio := unValor.! !ActorEconomico subclass: #Jugador	instanceVariableNames: 'casillero nroCasillero tablero estado estilo'	classVariableNames: ''	poolDictionaries: ''	category: 'TP Antimonopoly'!!Jugador methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:00'!caeEnInmobiliaria: unaInmobiliaria  self estilo construyeSiPuede: self en: unaInmobiliaria .! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:22'!casillero	^(tablero dameCasillero: nroCasillero).  ! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:22'!casillero: unCasillero	casillero := unCasillero.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'esteban 5/30/2012 11:38'!comprar: unaInversion	self agregarInversion: unaInversion.	(self estado) quitarInversion: unaInversion.	self pagarleA: (self estado) unaCantidad: (unaInversion valor).   	unaInversion dueño: self.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:26'!comprarSiQuiere: unaInversion	(self quieroComprar: unaInversion)	ifTrue: [self comprar: unaInversion].! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:27'!construir: unaCantidad departamentosEn: unaInversion.	unaInversion cantidadDepartamentos: (unaInversion cantidadDepartamentos + unaCantidad).	self pagarleA: (self estado) unaCantidad: (unaInversion valorDepartamento * unaCantidad).  ! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:24'!construir: unaCantidad edificiosEn: unaInversion	unaInversion cantidadEdificios: (unaInversion cantidadEdificios + unaCantidad).	self pagarleA: (self estado) unaCantidad: (unaInversion valorEdificio * unaCantidad).       ! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:27'!construirSiQuiereEn: unaInversion	(self quieroConstruirEn: unaInversion)	ifTrue: [self estilo construirEn: unaInversion].! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 20:57'!estado	^estado. ! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:18'!estado: unEstado	estado := unEstado.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:18'!estilo	^estilo.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:34'!estilo: unEstilo	estilo := unEstilo.	  ! !!Jugador methodsFor: 'as yet unclassified' stamp: 'esteban 5/19/2012 20:51'!hacerAccion	(self casillero) accion: self.  	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:23'!initialize 	inversiones := Set new.	nroCasillero := 1.    	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:19'!inversionesQueSuperan: unValor	^(inversiones select: [:unaInversion | unaInversion valor > unValor]).! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2012 20:58'!patrimonio 	^((inversiones inject: 0 into: [:acum :unaInversion | acum + unaInversion valor]) + self dinero).! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:57'!podesComprar: unaInversion	^((unaInversion dueño = self estado) & (self dinero > unaInversion valor)).! !!Jugador methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:30'!puedeConstruirEn: unaInmobiliaria	^(unaInmobiliaria puedeConstruir) and:[unaInmobiliaria precioSiguienteConstruccion  < self dinero].! !!Jugador methodsFor: 'as yet unclassified' stamp: 'sa 7/4/2012 17:36'!quieroComprar: unaInversion	^((self estilo) puede: self comprar: unaInversion).! !!Jugador methodsFor: 'as yet unclassified' stamp: 'esteban 5/18/2012 15:19'!tablero: unTablero	tablero := unTablero.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/14/2012 19:29'!tirarDado: unNumero	nroCasillero := (((nroCasillero + unNumero - 1) \\ tablero cantidadDeCasilleros) + 1).	(self casillero) jugador: self.	! !